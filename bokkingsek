onAppointmentFormOpening: async function (e) {
    let isAutoPost = false;  // Variabel lokal untuk pengecekan auto POST

    e.popup.option({
        width: 500,
        height: 800,
        onHiding: function () {
            loadData();
        }
    });

    const form = e.form;
    const appointmentData = e.appointmentData;
    let reqid = appointmentData.id;

    // Jika tidak ada ID, lakukan auto POST untuk membuat draft
    if (!reqid) {
        isAutoPost = true;  // Tandai bahwa auto POST sedang berlangsung

        const response = await sendRequest(apiurl + "/" + modname, "POST", {
            requestStatus: 0, // Draft status
            ghm_room_id: appointmentData.ghm_room_id,
            startDate: appointmentData.startDate,
            endDate: appointmentData.endDate,
            employee: appointmentData.employee,
            guest: appointmentData.guest,
            family: appointmentData.family
        });

        if (response.status === 'success') {
            reqid = response.data.id;
            appointmentData.id = reqid;
            e.component.updateAppointment(appointmentData, { id: reqid });
            form.option("formData", appointmentData);
            form.repaint();
        }

        isAutoPost = false;  // Reset flag setelah POST selesai
    }

    console.log("Appointment Data Before:", appointmentData);
},

onAppointmentUpdating: async function (e) {
    const appointmentData = e.newData;
    const oldAppointmentData = e.oldData;
    const currentStatus = oldAppointmentData.requestStatus;

    // Tidak perlu menghentikan update jika ada auto POST
    // Cek status dan proses update seperti biasa
    if (![0, 2, "0", null].includes(currentStatus)) {
        DevExpress.ui.notify({
            type: "error",
            displayTime: 3000,
            contentTemplate: (e) => {
                e.append(`
                    <div style="white-space: pre-line;">
                    Action Rejected!\n
                    Tidak di izinkan melakukan perubahan saat ini!\n
                    </div>
                `);
            }
        });
        e.cancel = true;
        return;
    }

    // Lanjutkan dengan proses update seperti sebelumnya
    // (validasi dan set data form untuk pembaruan)
    let selectedRoom = appointmentData.ghm_room_id || null;
    let newStartDate = new Date(appointmentData.startDate);
    let newEndDate = new Date(appointmentData.endDate);
    let appointments = e.component.option("dataSource") || [];                    

    // (Lanjutkan dengan logika validasi dan pembaruan yang kamu inginkan)
}
