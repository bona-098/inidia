ghmController
public function checkattachmentghm(Request $request)
    {
        try {
            $hasKTP = false;
            $hasKK = false;

            if ($request->countfamily > 0 ) {
                $data = DB::table('tbl_attachment')
                    ->where('req_id', $request->req_id)
                    ->where('module_id', $this->getModuleId($request->modelname))
                    ->where(function($query) {
                        $query->where('remarks', 'like', 'KTP')
                              ->orWhere('remarks', 'like', 'KK');
                    })
                    // ->where('remarks', 'like', 'KTP')
                    // ->where('remarks','like', 'KK')
                    ->get();
                    // $message = "KK, KTP is Required!";
            } else {
                $data = DB::table('tbl_attachment')
                    ->where('req_id', $request->req_id)
                    ->where('module_id', $this->getModuleId($request->modelname))
                    ->get();
                    $message = "Supporting document is required!";
            }

            foreach ($data as $attc) {
                // $countattfamily = ?
                if ($attc->remarks === 'KTP') {
                    // if($request->countfamily == $countattfamily) {
                    //     $hasKTP = true;
                    // }
                    $hasKTP = true;
                }
                if ($attc->remarks === 'KK') {
                    $hasKK = true;
                }
            }

            if (!$hasKTP) {
                return response()->json(["status" => "error", "message" => "Error: Supporting document 'KTP' is required. Please attach it."]);
            }

            if (!$hasKK) {
                return response()->json(["status" => "error", "message" => "Error: Supporting document 'KK' is required. Please attach it."]);
            }
        
            // $data = $this->model->all();
            if (count($data) > 0) {
                return response()->json(["status" => "success"]);
            } else {
                return response()->json(["status" => "error", "message" => $message]);
            }

        } catch (\Exception $e) {

            return response()->json(["status" => "error", "message" => $e->getMessage()]);
        } 
    }

ghm_booking.js
onAppointmentAdding: async function (e) {
                    const appointmentData = e.appointmentData;
                    let scheduler = e.component;
                    let guestCount = safeArray(appointmentData.guest).length;
                    let familyCount = safeArray(appointmentData.family).length;
                    let employeeCount = safeArray(appointmentData.employee).length;
                    let totalNewGuests = guestCount + familyCount + employeeCount;
                
                    if (totalNewGuests < 1) {
                        DevExpress.ui.notify({
                            type: "error",
                            displayTime: 3000,
                            contentTemplate: (e) => {
                                e.append(`
                                    <div style="white-space: pre-line;">
                                    List guest is required!\n
                                    Daftar tamu harus di isi!\n
                                    </div>
                                `);
                            }
                        });
                        e.cancel = true;
                        return;
                    }
                
                    let selectedRoom = appointmentData.ghm_room_id;
                    let roomData = roomsWithLocations.find(room => room.id === selectedRoom);
                    if (!roomData) {
                        DevExpress.ui.notify("Room not Found", "error", 3000);
                        e.cancel = true;
                        return;
                    }
                
                    let sector = roomData.sector;
                    let bookingData = await loadNewData();
                    let roomCapacity = roomsWithLocations.find(room => room.id === selectedRoom)?.roomOccupancy || 0;
                    let dailyGuestCount = await getTotalGuestsPerDay(
                        bookingData.filter(b => b.requestStatus != 4 && b.requestStatus != 0 && b.requestStatus != 2 && b.requestStatus != 1),
                        selectedRoom,
                        appointmentData.startDate,
                        appointmentData.endDate
                    );
                    let totalGuestsAfterAdding = (dailyGuestCount || 0) + totalNewGuests;
                    if (totalGuestsAfterAdding > roomCapacity) {
                        Swal.fire({
                            title: '<strong>UPS...</strong>',
                            html: `
                                <div style="white-space: no wrap; overflow: hidden; text-overflow: ellipsis;">
                                    The room is full, please select another room or another date!<br>
                                    kamar sudah penuh, silahkan pilih kamar lain atau tanggal lain!
                                </div>
                            `,
                            icon: 'error',
                            confirmButtonText: 'OK',
                        });
                        e.cancel = true;
                        loadData();
                        return;
                    }
                
                    let reqid = appointmentData.id;
                
                    Swal.fire({
                        title: 'What do you want to do?',
                        text: 'Choose an option for this booking',
                        icon: 'question',
                        showCancelButton: true,
                        confirmButtonText: 'Submit Now',
                        cancelButtonText: 'Save as Draft',
                        reverseButtons: true
                    }).then((result) => {
                        let requestStatus = 0;
                        if (!result.isConfirmed) {
                            sendRequest(apiurl + "/"+modname+"/"+reqid, "PUT", {
                                requestStatus: requestStatus,
                                text: appointmentData.text,
                                description: appointmentData.description,
                                startDate: appointmentData.startDate,
                                endDate: appointmentData.endDate,
                                ghm_room_id: appointmentData.ghm_room_id,
                                employee: appointmentData.employee,
                                guest: appointmentData.guest,
                                family: appointmentData.family,
                                sector: sector,
                                id:appointmentData.id
                            }).then(function () {
                                loadData();
                            });
                        } else {
                            sendRequest(apiurl + "/"+modname+"/"+reqid, "PUT", {
                                requestStatus: requestStatus,
                                text: appointmentData.text,
                                description: appointmentData.description,
                                startDate: appointmentData.startDate,
                                endDate: appointmentData.endDate,
                                ghm_room_id: appointmentData.ghm_room_id,
                                employee: appointmentData.employee,
                                guest: appointmentData.guest,
                                family: appointmentData.family,
                                sector: sector,
                                id:appointmentData.id
                            }).then(function (response) {
                                let valapprovalAction = null;
                                let actionForm = 'submission';
                                let valApprovalType = '';
                                let valremarks = '';
                                let guestCount = safeArray(appointmentData.guest).length;
                                let familyCount = safeArray(appointmentData.family).length;
                                
                                if (response.status == 'success') {
                                    console.log("reqid", reqid);
                                    console.log("family", familyCount);
                                    console.log("guestCount", guestCount);
                                    if (familyCount > 0 || guestCount > 0) {
                                        
                                        sendRequest(apiurl + "/checkattachmentghm", "POST",{
                                            req_id: reqid,
                                            modelname: modelclass,
                                            countfamily: familyCount,
                                            countguest: guestCount
                                        }).then(function (response) {
                                            console.log("respon", response);
                                            if (response.status == 'success') {
                                                sendRequest(apiurl + "/submissionrequest/" + reqid + "/" + modelclass, "POST", {
                                                    requestStatus: 1,
                                                    action: actionForm,
                                                    approvalAction: (valapprovalAction == null) ? 1 : parseInt(valapprovalAction),
                                                    approvalType: valApprovalType,
                                                    remarks: valremarks
                                                }).then(function (response) {
                                                    if (response.status == 'success') {
                                                        loadData();
                                                        Swal.fire({
                                                            icon: 'success',
                                                            title: 'Saved',
                                                            text: 'The submission has been submitted.',
                                                        });
                                                    }
                                                });
                                            } 
                                        })
                                    }                                    
                                    
                                    
                                }
                            });
                        }
                    });
                },
