public function dashboard()
    {
        $userId = auth()->user()->id;
        $requests = Ghm::where('requestStatus', 3)
        ->orWhere('user_id', $userId)
        ->with('User')
        ->get();
        $rooms = Ghm_room::all();
        $locations = Location::all();
        $code = code::all();
        $emplo= Employee::with('Department')->get();
        $departments = Department::all();

        $emplomapped = $emplo->map(function($emp) {
            return [
                'id' => $emp->id,
                'FullName' => $emp->FullName,
                'SAPID' => $emp->SAPID,
                'department_id' => $emp->department_id,
            ];
        });

        $departmentsMapped = $departments->map(function ($dept) {
            return [
                'id' => $dept->id,
                'DepartmentName' => $dept->DepartmentName
            ];
        });

        $totalPeopleData = DB::select("
        SELECT 
            request_ghm.id,
            COALESCE(SUM(EmployeeCount), 0) AS totalEmployee,
            COALESCE(SUM(GuestCount), 0) AS totalGuest,
            COALESCE(SUM(FamilyCount), 0) AS totalFamily,
            COALESCE(SUM(EmployeeCount + GuestCount + FamilyCount), 0) AS totalAll
        FROM 
            request_ghm
        CROSS APPLY (SELECT COUNT(*) AS EmployeeCount FROM OPENJSON(employee_id)) AS EmpData
        CROSS APPLY (SELECT COUNT(*) AS GuestCount FROM OPENJSON(guest)) AS GuestData
        CROSS APPLY (SELECT COUNT(*) AS FamilyCount FROM OPENJSON(family)) AS FamilyData
        GROUP BY id
        ");
        
        // Konversi hasil query ke associative array dengan ID sebagai key
        $totalPeopleArray = collect($totalPeopleData)->mapWithKeys(function ($item) {
            return [$item->id => $item->totalAll];
        });

        // Mapping booking
        $booking = $requests->map(function ($request) use ($rooms, $locations, $totalPeopleArray) {
            $room = $rooms->firstWhere('id', $request->ghm_room_id);
            $location = $room ? $locations->firstWhere('id', $room->location_id) : null;

        // Ambil totalPeople berdasarkan ID request
        $totalPeople = $totalPeopleArray[$request->id] ?? 0;
            return [                
                'id' => $request->id,
                'text' => $request->text,
                'guest' => $request->guest,
                'family' => $request->family,
                'employee_id' =>$request->employee_id,
                'ticketstatus'=> $request->ticketStatus,
                'completeddate' => $request->completeddate,
                'confirmationStatus' =>$request->confirmationStatus,
                'description' => $request->description,
                'requestStatus' => $request->requestStatus,
                'startDate' => $request->startDate ? $request->startDate->toIso8601String() : null,
                'endDate' => $request->endDate ? $request->endDate->toIso8601String() : null,
                'code' => $request->code ? $request->code->code : null,
                'creator' => $request->User ? $request->User->fullname : null,
                'ghm_room_id' => $request->ghm_room_id,
                'roomName' => $room ? $room->roomName : null,
                'location' => $location ? $location->Location : null,
                'totalPeople' => $totalPeople
            ];
        });
        
        $roomsWithLocations = $rooms->map(function ($room) use ($locations) {
            $location = $locations->firstWhere('id', $room->location_id);
            return [
                'text' => $room->roomName,
                'id' => $room->id,
                'roomAccupancy' => $room->roomAccupancy,
                'location' => $location ? $location->Location : null,
                'color' => '#'.substr(md5($room->roomName), 0, 6) // Generate color based on room name hash
            ];
        });

        // Getting unique locations
        $uniqueLocations = $roomsWithLocations->pluck('location')->unique()->values();

        return view('dashboard.ghm_booking', [
            'booking' => $booking,
            'roomsWithLocations' => $roomsWithLocations,
            'uniqueLocations' => $uniqueLocations,
            'emplo' => $emplomapped,
            'departments' =>$departmentsMapped,
        ]);
        // return response()->json([
        //     'booking' => $booking,
        //     'roomsWithLocations' => $roomsWithLocations,
        //     'uniqueLocations' => $uniqueLocations,
        //     'emplo' => $emplo
        // ]);
        // dd($booking);

    }
