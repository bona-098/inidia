public function dashboard()
    {
        // $requests = Ghm::where('requestStatus', 3)->get();
        $requests = Ghm::with('User')->get();
        $rooms = Ghm_room::all();
        $locations = Location::all();
        $code = code::all();
        $emplo=Employee::all();

        // return $requests;
        // dump($requests);

          // Mapping booking
        $booking = $requests->map(function ($request) use ($rooms, $locations) {
            $room = $rooms->firstWhere('id', $request->ghm_room_id);
            $location = $room ? $locations->firstWhere('id', $room->location_id) : null;
            return [                
                'id' => $request->id,
                'text' => $request->text,
                'guest' => $request->guest,
                'family' => $request->family,
                'employee_id' =>$request->employee_id,
                'ticketstatus'=> $request->ticketStatus,
                'completeddate' => $request->completeddate,
                'confirmationStatus' =>$request->confirmationStatus,
                'description' => $request->description,
                'requestStatus' => $request->requestStatus,
                'startDate' => $request->startDate ? $request->startDate->toIso8601String() : null,
                'endDate' => $request->endDate ? $request->endDate->toIso8601String() : null,
                'code' => $request->code ? $request->code->code : null,
                'creator' => $request->User ? $request->User->fullname : null,
                'ghm_room_id' => $request->ghm_room_id,
                'roomName' => $room ? $room->roomName : null,
                'location' => $location ? $location->Location : null
            ];
        });

        $room = DB::table('Ghm')->where('id', $room_id)->first();
        $roomCapacity = $room->roomAccupancy ?? 0;
    
        $totalPeople = DB::table('bookings')
            ->where('ghm_room_id', $room_id)
            ->where(function ($query) use ($startDate, $endDate) {
                $query->whereBetween('startDate', [$startDate, $endDate])
                      ->orWhereBetween('endDate', [$startDate, $endDate]);
            })
            ->selectRaw('SUM(
                JSON_LENGTH(employee_id) + JSON_LENGTH(guest) + JSON_LENGTH(family)
            ) as totalPeople')
            ->value('totalPeople') ?? 0;
        $remainingCapacity = $roomCapacity - $totalPeople;
        return response()->json([
            'roomCapacity' => $roomCapacity,
            'totalPeople' => $totalPeople,
            'remainingCapacity' => $remainingCapacity
        ]);
        // return $booking;

        // Mapping rooms with locations
        $roomsWithLocations = $rooms->map(function ($room) use ($locations) {
            $location = $locations->firstWhere('id', $room->location_id);
            return [
                'text' => $room->roomName,
                'id' => $room->id,
                'roomAccupancy' => $room->roomAccupancy,
                'location' => $location ? $location->Location : null,
                'color' => '#'.substr(md5($room->roomName), 0, 6) // Generate color based on room name hash
            ];
        });

        // Getting unique locations
        $uniqueLocations = $roomsWithLocations->pluck('location')->unique()->values();

        
        return view('dashboard.ghm_booking', [
                'booking' => $booking,
                'roomsWithLocations' => $roomsWithLocations,
                'uniqueLocations' => $uniqueLocations,
                'emplo' => $emplo,
                "totalPeople" => $totalPeople,
                'remainingCapacity' =>$remainingCapacity
            ]);
        }
