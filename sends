public function index(Request $request)
    {
        try {            
            $id = $request->id;
            $user_id = $this->getAuth()->id;
            $employeeid = $this->getEmployeeID()->id;
            $module_id = $this->getModuleId($this->modulename);
            $isAdmin = $this->getAuth()->isAdmin;
            $requestData = $request->all();
            $dataquery = $this->model->query();

            // $userId = $user_id;
            // $moduleId = $module_id;
            $subquery = "(select TOP 1 
                CASE WHEN a.user_id='".$user_id."' 
                then 1 else 0 end 
                from tbl_approverListReq l
                left join tbl_approver a on l.approver_id=a.id
                left join tbl_approvaltype r on a.approvaltype_id = r.id 
                where l.ApprovalAction='1' 
                and l.req_id = request_ghm.id and l.module_id = '".$module_id."' 
                and request_ghm.requestStatus='1'
                order by a.sequence)";          
               
                $gethrsl = "(select TOP 1 CASE WHEN a.user_id='".$user_id."'  then 1 else 0 end 
            from tbl_approverListReq l
            left join tbl_approver a on l.approver_id=a.id
            left join tbl_approvaltype r on a.approvaltype_id = r.id 
            where l.req_id = request_ghm.id and l.module_id = '".$module_id."' and r.ApprovalType='HR Service Leader' and r.isactive='1'
            order by a.sequence)";

            if(!$isAdmin) {
                $dataquery->leftJoin('tbl_assignment',function($join) use ( $user_id, $module_id){
                    $join->on('request_ghm.id','=','tbl_assignment.req_id')
                        ->where("request_ghm.user_id", "!=", $user_id)
                        ->where('tbl_assignment.module_id',$module_id);
                });
            }
            $data = $dataquery
                ->selectRaw("request_ghm.id,
                codes.code, 
                request_ghm.user_id,
                request_ghm.description,
                request_ghm_room.roomName,
                request_ghm_room.bu,
                request_ghm_room.sector,
                request_ghm.ghm_room_id,            
                request_ghm.text,
                request_ghm.description,
                request_ghm.requestStatus,
                request_ghm.startDate,
                request_ghm.endDate,
                request_ghm.created_at,
                request_ghm.updated_at,
                (SELECT STRING_AGG(emp.fullname, ', ')
                FROM OPENJSON(request_ghm.employee) 
                WITH (employee_id INT '$')
                LEFT JOIN employee.tbl_employee AS emp
                ON emp.id = employee_id
                ) AS employee_fullname,
                COALESCE((SELECT STRING_AGG(value, ', ') FROM OPENJSON(request_ghm.guest)), 'failed') AS guest,
                COALESCE((SELECT STRING_AGG(value, ', ') FROM OPENJSON(request_ghm.family)), 'failed') AS family,
                employee.tbl_location.Location, 
                    CASE WHEN request_ghm.user_id='".$user_id."' then 1 else 0 end as isMine,
                    ".$subquery." as isPendingOnMe,
                    ".$gethrsl." as isGHM
                ")
                ->leftJoin('codes', 'request_ghm.code_id', '=', 'codes.id')
                ->leftJoin('request_ghm_room', 'request_ghm.ghm_room_id', '=', 'request_ghm_room.id')
                ->leftJoin('employee.tbl_location', 'request_ghm_room.location_id', '=', 'employee.tbl_location.id')
                ->with(['user', 'approverlist'])
                ->where(function ($query) use ($subquery, $user_id, $isAdmin, $employeeid, $module_id) {
                    $query->whereRaw($subquery . " = 1")
                        ->orWhere(function ($query) use ($user_id, $isAdmin, $employeeid, $module_id) {
                            if ($isAdmin) {
                                $query->where("request_ghm.user_id", "!=", $user_id)
                                    ->whereIn("request_ghm.requestStatus", [1,3,4]);
                            }
                            //  else {
                            //     $query->where("request_ghm.user_id", "!=", $user_id)
                            //     ->whereIn("request_ghm.requestStatus", [0,1,2,3,4]);
                                // ->where("bu",$this->getEmployeeID()->companycode);                        
                            // }
                        })
                        ->orWhere("request_ghm.user_id", $user_id);
                })
                ->orderBy(DB::raw($subquery), 'DESC')
                ->orderByRaw("CASE WHEN request_ghm.user_id = '".$user_id."' THEN 0 ELSE 1 END, request_ghm.created_at desc")
                ->get();
            return response()->json([
                'status' => "show",
                'message' => $this->getMessage()['show'],
                'data' => $data,
            ])->setEncodingOptions(JSON_NUMERIC_CHECK);
        } catch (\Exception $e) {
            return response()->json(["status" => "error", "message" => $e->getMessage()]);
        }
    }
