public function index(Request $request)
{
    try {            
        $id = $request->id;
        $user_id = $this->getAuth()->id;
        $employeeid = $this->getEmployeeID()->id;
        $module_id = $this->getModuleId($this->modulename);
        $isAdmin = $this->getAuth()->isAdmin;

        $dataquery = $this->model->query();

        $data = $dataquery
            ->selectRaw("request_ghm.id,
                codes.code, 
                request_ghm.user_id,
                request_ghm.description,
                request_ghm_room.roomName,
                request_ghm_room.bu,
                request_ghm_room.sector,
                request_ghm.ghm_room_id,            
                request_ghm.text,
                request_ghm.description,
                request_ghm.requestStatus,
                request_ghm.startDate,
                request_ghm.endDate,
                request_ghm.created_at,
                request_ghm.updated_at,
                (SELECT STRING_AGG(emp.fullname, ', ')
                FROM OPENJSON(request_ghm.employee) 
                WITH (employee_id INT '$')
                LEFT JOIN employee.tbl_employee AS emp
                ON emp.id = employee_id
                ) AS employee_fullname,
                COALESCE(request_ghm.guest, '[]') AS guest,
                COALESCE(request_ghm.family, '[]') AS family,
                employee.tbl_location.Location
            ")
            ->leftJoin('codes', 'request_ghm.code_id', '=', 'codes.id')
            ->leftJoin('request_ghm_room', 'request_ghm.ghm_room_id', '=', 'request_ghm_room.id')
            ->leftJoin('employee.tbl_location', 'request_ghm_room.location_id', '=', 'employee.tbl_location.id')
            ->with(['user', 'approverlist'])
            ->get();

        // **Konversi guest & family dari string JSON ke array**
        $data->transform(function ($item) {
            $item->guest = json_decode($item->guest, true) ?? [];
            $item->family = json_decode($item->family, true) ?? [];
            return $item;
        });

        return response()->json([
            'status' => "show",
            'message' => $this->getMessage()['show'],
            'data' => $data,
        ])->setEncodingOptions(JSON_NUMERIC_CHECK);
    } catch (\Exception $e) {
        return response()->json(["status" => "error", "message" => $e->getMessage()]);
    }
}
